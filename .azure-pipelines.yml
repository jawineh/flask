trigger:
- master

variables:
  vmImage: ubuntu-latest
  python.version: '3.7'
  TOXENV: 'py,codecov'
  python.architecture: 'x64'

strategy:
  matrix:
    Python37Linux:
      python.version: '3.7'
    Python37Windows:
      python.version: '3.7'
      vmImage: 'windows-latest'
    Python37Mac:
      python.version: '3.7'
      vmImage: 'macos-latest'
    Pypy3Linux:
      python.version: 'pypy3'
    Python36Linux:
      python.version: '3.6'
    Python35Linux:
      python.version: '3.5'
    Python27Linux:
      python.version: '2.7'
    Python27Windows:
      python.version: '2.7'
      vmImage: 'windows-latest'
    DocsHtml:
      TOXENV: docs-html
    VersionRange:
      TOXENV: devel,lowest,codecov

pool:
  vmImage: $[ variables.vmImage ]

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: $(python.version)
    architecture: $(python.architecture)

- script: pip install -U tox
  displayName: 'Install tox'

- script: tox
  displayName: 'Run tox'

# TODO: add codecov token
# TODO: emit JUnit test results
# TODO: build on nightly
# The | symbol is a continuation character, indicating a multi-line script.
# A single-line script can immediately follows "- script:" without the |.
- script: |
    # antenv is the virtual environment name that App Service expects
    python3.6 -m venv antenv
    source antenv/bin/activate
    pip3.6 install setuptools
    pip3.6 install -r requirements.txt

  # The displayName is shows in the pipeline UI when a build runs
  displayName: 'Install Dependencies'
- script: |
    python -m pip install flake8
    flake8 .
  displayName: 'Run lint tests'  
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # (no value); this input is optional 
- task: AzureRMWebAppDeployment@4
  displayName: Azure App Service Deploy
  inputs:
    appType: webAppLinux
    RuntimeStack: 'PYTHON|3.6'
    ConnectedServiceName: $(ConnectedServiceName)
    WebAppName: $(WebAppName)
    Package: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'

    # The following parameter is specific to the Flask example code. You may
    # or may not need a startup command for your own app.

    StartupCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'    
 # This is the completed azure-pipelines.yaml file from previous steps.
#variables:
#  ConnectedServiceName: '<your-service-connection>'
#  WebAppName: 'msdocs-flaskpipelines'

#trigger:
#- master

#pool:
#  name: Hosted Ubuntu 1604

#steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'

- script: |
    python3.6 -m venv antenv
    source antenv/bin/activate
    pip3.6 install setuptools
    pip3.6 install -r requirements.txt

  # The displayName is shows in the pipeline UI when a build runs
  displayName: 'Install Dependencies'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # Optional

- task: AzureRMWebAppDeployment@4
  displayName: Azure App Service Deploy
  inputs:
    appType: webAppLinux
    RuntimeStack: 'PYTHON|3.6'
    ConnectedServiceName: $(ConnectedServiceName)
    WebAppName: $(WebAppName)
    Package: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'

    # The following command is specific to the python-sample-vscode-flask-tutorial code.
    # You may or may not need a startup command for your own app.

    StartupCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'   